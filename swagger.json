{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "description": "API documentation for the project.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://backend-gohddmb5kq-et.a.run.app"
    }
  ],
  "tags": [
    {
      "name": "API Endpoint",
      "description": "Operations related to this project"
    }
  ],
  "paths": {
    "/api/towers": {
      "get": {
        "summary": "This API is used to get the towers",
        "description": "This API is used to check the method",
        "responses": {
          "200": {
            "description": "To test GET method"
          }
        }
      }
    },
    "/api/reportlength": {
      "get": {
        "summary": "This API is used to get length from the report",
        "description": "This API is used to check the method",
        "responses": {
          "200": {
            "description": "To test GET method"
          }
        }
      }
    },
    "/api/blankspots": {
      "get": {
        "summary": "This API is used to get the blankspots",
        "description": "This API is used to check the method",
        "responses": {
          "200": {
            "description": "To test GET method"
          }
        }
      },
      "post": {
        "summary": "Create a blankspot",
        "description": "This API is used to create a blankspot.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lokasi": {
                    "type": "string",
                    "description": "The location of the blankspot",
                    "example": "Location Example"
                  },
                  "operator": {
                    "type": "string",
                    "description": "The operator related to the blankspot",
                    "example": "Telkomsel"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "The latitude of the location",
                    "example": "-8.5833"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "The longitude of the location",
                    "example": "116.1167"
                  },
                  "verifyToken": {
                    "type": "string",
                    "description": "The token for verification",
                    "example": "example_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Blankspot created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/api/blankspots/{id}": {
      "delete": {
        "summary": "Delete a blankspot",
        "description": "This API is used to delete a blankspot by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the blankspot"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "verifyToken": {
                    "type": "string",
                    "description": "The token for verification",
                    "example": "example_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Blankspot deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      },
      "put": {
        "summary": "Update a blankspot",
        "description": "This API is used to update a blankspot.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the blankspot"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lokasi": {
                    "type": "string",
                    "description": "The location of the blankspot",
                    "example": "Updated Location"
                  },
                  "operator": {
                    "type": "string",
                    "description": "The operator related to the blankspot",
                    "example": "Updated Operator"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "The latitude of the location",
                    "example": "-8.5833"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "The longitude of the location",
                    "example": "116.1167"
                  },
                  "verifyToken": {
                    "type": "string",
                    "description": "The token for verification",
                    "example": "example_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Blankspot updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/api/kritik": {
      "post": {
        "summary": "This API is used to submit feedback",
        "description": "This API is used to submit feedback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nama": {
                    "type": "string",
                    "description": "The name of the person giving feedback",
                    "example": "Testting"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of the person giving feedback",
                    "example": "test@gmail.com"
                  },
                  "telepon": {
                    "type": "string",
                    "description": "The phone number of the person giving feedback",
                    "example": "1234567890"
                  },
                  "pesan": {
                    "type": "string",
                    "description": "The message content of the feedback",
                    "example": "This is my feedback"
                  },
                  "captchaToken": {
                    "type": "string",
                    "description": "The reCAPTCHA token for verification",
                    "example": "6Lc0PRYqAAAAAK2qGCy7UlgZ0ajUyN2SdwoLc4bu"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback submitted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid captcha token"
          }
        }
      },
      "get": {
        "summary": "Get all feedback",
        "description": "This API is used to retrieve all feedback.",
        "parameters": [
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The token for verification"
          }
        ],
        "responses": {
          "200": {
            "description": "Feedback retrieved successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/api/report": {
      "post": {
        "summary": "This API is used to submit a report",
        "description": "This API is used to submit a report",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nama": {
                    "type": "string",
                    "description": "The name of the person giving feedback",
                    "example": "Testting"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of the person giving feedback",
                    "example": "test@gmail.com"
                  },
                  "telepon": {
                    "type": "string",
                    "description": "The phone number of the person giving feedback",
                    "example": "1234567890"
                  },
                  "lokasi": {
                    "type": "string",
                    "description": "The location of the report",
                    "example": "Mataram"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "The latitude of the location",
                    "example": "2313213"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "The longitude of the location",
                    "example": "161281"
                  },
                  "operator": {
                    "type": "string",
                    "description": "The operator related to the report",
                    "example": "Telkomsel"
                  },
                  "keterangan": {
                    "type": "string",
                    "description": "Additional details of the report",
                    "example": "huhuhaha testing"
                  },
                  "captchaToken": {
                    "type": "string",
                    "description": "The reCAPTCHA token for verification",
                    "example": "6Lc0PRYqAAAAAK2qGCy7UlgZ0ajUyN2SdwoLc4bu"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report submitted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid captcha token"
          }
        }
      },
      "get": {
        "summary": "Get all reports",
        "description": "This API is used to retrieve all reports.",
        "parameters": [
          {
            "name": "verifyToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The token for verification"
          }
        ],
        "responses": {
          "200": {
            "description": "Reports retrieved successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "This API is used to login",
        "description": "This API is used to login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The name of the user",
                    "example": "hanif"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the user",
                    "example": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/api/register": {
      "post": {
        "summary": "This API is used to register",
        "description": "This API is used to register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username of the new user",
                    "example": "newuser"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password of the new user",
                    "example": "newpassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/towers/{id}": {
      "put": {
        "summary": "Update a tower",
        "description": "This API is used to update a tower.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the tower"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lokasi": {
                    "type": "string",
                    "description": "The location of the tower",
                    "example": "Updated Location"
                  },
                  "ketinggian": {
                    "type": "integer",
                    "description": "The height of the tower",
                    "example": 60
                  },
                  "operator": {
                    "type": "string",
                    "description": "The operator related to the tower",
                    "example": "Updated Operator"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the tower",
                    "example": "Inactive"
                  },
                  "tipe": {
                    "type": "string",
                    "description": "The type of the tower",
                    "example": "Updated Type"
                  },
                  "latitude": {
                    "type": "string",
                    "description": "The latitude of the location",
                    "example": "-8.5833"
                  },
                  "longitude": {
                    "type": "string",
                    "description": "The longitude of the location",
                    "example": "116.1167"
                  },
                  "verifyToken": {
                    "type": "string",
                    "description": "The token for verification",
                    "example": "example_token"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tower updated successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid token"
          }
        }
      }
    },
    "/api/towers/id": {
      "parameters": [
        {
          "name": "id",
          "in": "query",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the tower"
        }
      ]
    }
  }
}
